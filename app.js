var url = "http://127.0.0.1:8545";	//	URL on which ganache is running

//	ByteCode of Smart code
var bytecode = {
	"linkReferences": {},
	"object": "6080604052600060175533601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606060405180604001604052806000815260200182815250600d60006003811061007057fe5b6002020160008201518160000155602082015181600101908051906020019061009a929190610148565b5090505060405180604001604052806001815260200182815250600d6001600381106100c257fe5b600202016000820151816000015560208201518160010190805190602001906100ec929190610148565b5090505060405180604001604052806002815260200182815250600d60026003811061011457fe5b6002020160008201518160000155602082015181600101908051906020019061013e929190610148565b50905050506101ba565b828054828255906000526020600020908101928215610184579160200282015b82811115610183578251825591602001919060010190610168565b5b5090506101919190610195565b5090565b6101b791905b808211156101b357600081600090555060010161019b565b5090565b90565b61076d806101c96000396000f3fe6080604052600436106100555760003560e01c80631aa3a0081461005a57806338af3eed14610064578063598647f8146100bb578063952587d6146100f3578063a2fb11751461010a578063bfb231d214610185575b600080fd5b6100626101d4565b005b34801561007057600080fd5b50610079610345565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100f1600480360360408110156100d157600080fd5b81019080803590602001909291908035906020019092919050505061036b565b005b3480156100ff57600080fd5b506101086105d9565b005b34801561011657600080fd5b506101436004803603602081101561012d57600080fd5b81019080803590602001909291905050506106e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019157600080fd5b506101be600480360360208110156101a857600080fd5b8101908080359060200190929190505050610717565b6040518082815260200191505060405180910390f35b6017546001601754600481106101e657fe5b60030201600101819055503360016017546004811061020157fe5b6003020160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560016017546004811061025757fe5b600302016000018190555060016017546004811061027157fe5b600302016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201548160000155600182015481600101556002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050601760008154809291906001019190505550565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410806103fb575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154145b806104065750600282115b1561041057600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015460016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546004811061052957fe5b60030201600001819055506000600d836003811061054357fe5b60020201905060008090505b828110156105d357816001016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549080600181540180825580915050906001820390600052602060002001600090919290919091505550808060010191505061054f565b50505050565b60008090505b60038110156106e1576000600d82600381106105f757fe5b60020201905060008160010180549050146106d357600081600101805490508260010180549050438161062657fe5b048161062e57fe5b069050600082600101828154811061064257fe5b906000526020600020015490506001816004811061065c57fe5b6003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166013856003811061069157fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b5080806001019150506105df565b50565b601381600381106106f157fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d816003811061072457fe5b60020201600091509050806000015490508156fea265627a7a72305820f8c9c17d94f852665e3db089974bd55732124e421767560160362a9feeed614964736f6c63430005090032",
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x17 SSTORE CALLER PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x70 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9A SWAP3 SWAP2 SWAP1 PUSH2 0x148 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0xC2 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xEC SWAP3 SWAP2 SWAP1 PUSH2 0x148 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x114 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x13E SWAP3 SWAP2 SWAP1 PUSH2 0x148 JUMP JUMPDEST POP SWAP1 POP POP POP PUSH2 0x1BA JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x184 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x183 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x168 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x195 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1B7 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x19B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x76D DUP1 PUSH2 0x1C9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x598647F8 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x952587D6 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x185 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH2 0x1D4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT PUSH2 0x1E6 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT PUSH2 0x201 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT PUSH2 0x257 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT PUSH2 0x271 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x17 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT DUP1 PUSH2 0x3FB JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST DUP1 PUSH2 0x406 JUMPI POP PUSH1 0x2 DUP3 GT JUMPDEST ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP2 LT PUSH2 0x529 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x543 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5D3 JUMPI DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x54F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 PUSH1 0xD DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x5F7 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP EQ PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP NUMBER DUP2 PUSH2 0x626 JUMPI INVALID JUMPDEST DIV DUP2 PUSH2 0x62E JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x642 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 LT PUSH2 0x65C JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x13 DUP6 PUSH1 0x3 DUP2 LT PUSH2 0x691 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x13 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x6F1 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x724 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xf8 0xc9 0xc1 PUSH30 0x94F852665E3DB089974BD55732124E421767560160362A9FEEED61496473 PUSH16 0x6C634300050900320000000000000000 ",
	"sourceMap": "24:5003:0:-;;;795:1;778:18;;1117:10;1103:11;;:24;;;;;;;;;;;;;;;;;;1178;1223:38;;;;;;;;1236:1;1223:38;;;;1249:10;1223:38;;;1212:5;1218:1;1212:8;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1409:38;;;;;;;;1422:1;1409:38;;;;1435:10;1409:38;;;1398:5;1404:1;1398:8;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1468:38;;;;;;;;1481:1;1468:38;;;;1494:10;1468:38;;;1457:5;1463:1;1457:8;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;827:725;24:5003;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
}

//	ABI of smart contract
var abi = [
	{
		"constant": false,
		"inputs": [],
		"name": "register",
		"outputs": [],
		"payable": true,
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "beneficiary",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "_itemId",
				"type": "uint256"
			},
			{
				"name": "_count",
				"type": "uint256"
			}
		],
		"name": "bid",
		"outputs": [],
		"payable": true,
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [],
		"name": "revealWinners",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"name": "winners",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"name": "items",
		"outputs": [
			{
				"name": "itemId",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"payable": true,
		"stateMutability": "payable",
		"type": "constructor"
	}
];

var provider;
var wallet;
var contractWithSigner;
var contractAddress;

//	Deploy smart contract
var submitBtn = document.querySelector(".submit");
var deployForm = document.querySelector("form");
var privateKeyTerm = document.querySelector(".private-key");

// Get Beneficiary address
var getBeneficiaryAddressBtn = document.querySelector(".getBeneficiaryAddress");
var getResult = document.querySelector(".get-result");

// Register person
var registerBidderBtn = document.querySelector(".registerBidder");
var getBidderRegistered = document.querySelector(".get-bidder-result");

//	Submit Bid for an item
var submitBidBtn = document.querySelector(".submitBid");
var bidForm = document.querySelector(".bitForm")
var item = document.querySelector(".item");
var token = document.querySelector(".token");
var submitBidResult = document.querySelector(".submitBidsResult");

// Reveal winners
var revealWinnersBtn = document.querySelector(".revealWinners");
var getRevealWinnersResult = document.querySelector(".get-reveal-winners-fn-result");

// Get Winner Details corresponding to winner id
var getWinnerIdBtn = document.querySelector(".getWinnerId");
var winnerId = document.querySelector(".winnerId");
var getWinnerIdResult = document.querySelector(".get-WinnerId-result");

//	Listeners for all buttons
deployForm.addEventListener("submit", submitDeploy);
getBeneficiaryAddressBtn.addEventListener("click", getBeneficiaryAddressFn);
registerBidderBtn.addEventListener("click", registerBidderFn);
bidForm.addEventListener("submit", submitBid);
revealWinnersBtn.addEventListener('click', revealWinnersFn);
getWinnerIdBtn.addEventListener("click", getWinnerIdDetailsFn);

function createWallet(privateKey) {
	wallet = new ethers.Wallet(privateKey, provider);
}

bidderRegisteredCount = 0	//	Initialize the register count of bidder to 0.

//	Deploy smart contract function
function submitDeploy(e) {
	e.preventDefault();
	createWallet(privateKeyTerm.value);
	// Create an instance of a Contract Factory
	var factory = new ethers.ContractFactory(abi, bytecode.object, wallet);
	factory.deploy().then(async contract => {
		await contract.deployed();
		console.log("Deployed...");
		contractAddress = contract.address;
		var contract = new ethers.Contract(contractAddress, abi, provider);
		contractWithSigner = contract.connect(wallet);
		bidderRegisteredCount = 0
	});
}

// Function for getting beneficiary address
function getBeneficiaryAddressFn(e) {
	e.preventDefault();
	while (getResult.firstChild) {
		getResult.removeChild(getResult.firstChild);
	}
	contractWithSigner.beneficiary().then(val => {
		console.log("Get Beneficiary address...");
		var res = document.createElement("p");
		res.textContent = val;
		getResult.appendChild(res);
	});
}

//  Function for registering the bidder
function registerBidderFn(e) {
	e.preventDefault();
	while (getBidderRegistered.firstChild) {
		getBidderRegistered.removeChild(getBidderRegistered.firstChild);
	}
	bidderRegisteredCount++;
	contractWithSigner.register().then(val => {
		console.log("Person's registered: " + bidderRegisteredCount);
		console.log(val);
		var res = document.createElement("p");
		res.textContent = "No. of bidder's registered: " + bidderRegisteredCount;
		getBidderRegistered.appendChild(res);
	}, err => {
		var res = document.createElement("p");
		res.textContent = err;
		var resMsg = document.createElement("span");
		resMsg.textContent = "Only 4 bidders can be registered in bidders Array. Please enter values in between 0-3."
		getBidderRegistered.appendChild(res);
		getBidderRegistered.appendChild(resMsg);
	});
}

//	Function for interacting with 'bid' function of smart contract and to submit bid.
function submitBid(e) {
	e.preventDefault();
	while (submitBidResult.firstChild) {
		submitBidResult.removeChild(submitBidResult.firstChild);
	}
	
	var itemVal = item.value;
	var tokenVal = token.value;
	contractWithSigner.bid(itemVal, tokenVal).then(async tx => {
		await tx.wait();
		console.log("Item: " + item.value);
		console.log("Token: " + token.value);
		var res = document.createElement("p");
		res.textContent = "Item: " + itemVal + " and Tokens to Bid: " + tokenVal;
		submitBidResult.appendChild(res);
	}, err => {
		console.log(err);
		var res = document.createElement("p");
		res.textContent = err;
		submitBidResult.appendChild(res);
	});
}

//	Function for revealing the winners of the auction by calling 'revealWinners()' from smart contract.
function revealWinnersFn(e) {
	e.preventDefault();
	while (getRevealWinnersResult.firstChild) {
		getRevealWinnersResult.removeChild(getRevealWinnersResult.firstChild);
	}
	contractWithSigner.revealWinners().then(val => {
		console.log("Reveal function invoked..");
		var res = document.createElement("p");
		res.textContent = "Reveal Function is invoked..";
		getRevealWinnersResult.appendChild(res);
	}, err => {
		var res = document.createElement("p");
		res.textContent = err;
		getRevealWinnersResult.appendChild(res);
	})
}

//	Get the winner Id's array by invoking winners get method from the smart contract.
function getWinnerIdDetailsFn(e) {
	e.preventDefault();
	while (getWinnerIdResult.firstChild) {
		getWinnerIdResult.removeChild(getWinnerIdResult.firstChild);
	}

	contractWithSigner.winners(winnerId.value).then(val => {
		console.log("Get winner id Details...");
		var res = document.createElement("p");
		res.textContent = val;
		getWinnerIdResult.appendChild(res);
	}, err => {
		console.log(err);
		var res = document.createElement("p");
		res.textContent = err;
		var resMsg = document.createElement("span");
		resMsg.textContent = 'Only 3 Winners are defined in a Winner Array. Please enter values in between 0-2.';
		getWinnerIdResult.appendChild(res);
		getWinnerIdResult.appendChild(resMsg);
	});
}

window.onload = () => {
	provider = new ethers.providers.JsonRpcProvider(url);
};
